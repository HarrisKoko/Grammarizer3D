global string $grammar = "";
global string $iterSlide;
global string $outputCountSlide;
global string $minEdgeLengthSlide;
global string $maxEdgeLengthSlide;
global string $txtField;

// ReadTxtFile and openTxtFileBrowser should be edited to work for json. Probably need a command registered for the reading part so the grammar can be in C++ code
global proc string readTxtFile(string $filePath) {
    int $fid = `fopen $filePath "r"`;
    string $fileContents = "";

    $fileContents = `fread $fid $fileContents`;

    fclose $fid;
    return $fileContents;
}

global proc openTxtFileBrowser(string $txtField) {
    string $filePathArray[] = `fileDialog2 -fileMode 1 -caption "Select a TXT File" -fileFilter "Text Files (*.txt)"`;
    if (size($filePathArray) > 0) {
        string $filePath = $filePathArray[0];
        string $fileContents = readTxtFile($filePath);
        global string $grammar;
        $grammar = $fileContents;
        if (size($fileContents) > 0) {
            textField -e -text "Grammar successfully loaded." $txtField;
        } else {
            textField -e -text "Failed to load grammar." $txtField;
        }

    }
}

//On create pressed should be reporposed for generation (application of grammar) and/or load objcet and/or make grammar
global proc onCreatePressed() {
    global string $iterSlide;
    global string $outputCountSlide;
    global string $minEdgeLengthSlide;
    global string $maxEdgeLengthSlide;
    global string $grammar;
    global string $txtField;

    int $iters = `intSliderGrp -q -value $iterSlide`;
    int $outputCount = `intSliderGrp -q -value $outputCountSlide`;
    float $minEdgeLength = `floatSliderGrp -q -value $minEdgeLengthSlide`;
    float $maxEdgeLength = `floatSliderGrp -q -value $maxEdgeLengthSlide`;

    string $cmd = `GrammarizerCmd -minEdgeLength $minEdgeLength -maxEdgeLength $maxEdgeLength -grammar $grammar -iterations $iters -outputCount $outputCount`;

    int $success = catch(`eval($cmd)`); // catch returns 0 if no error, 1 if error

    if ($success == 0) {
        textField -e -text "Grammar applied successfully." $txtField;
    } else {
        textField -e -text "Failed to generate with grammar." $txtField;
    }
}


global proc onCancelPressed() {
    if (`window -exists myWindow`) {
        deleteUI myWindow;
    }
}

global proc showMyWindow() {
    if (`window -exists myWindow`) {
        deleteUI myWindow;
    }

    window -title "Grammarizer Tool" myWindow;
    columnLayout -adjustableColumn true;

    button -label "Load Object" -command "loadObject()"; 

    global string $txtField;
    $txtField = `textField -editable false -width 300 -height 50`;
    button -label "Load Grammar" -command ("openTxtFileBrowser \"" + $txtField + "\"");

    global string $iterSlide;
    $iterSlide = `intSliderGrp -label "Iterations" -field true
        -minValue 1 -maxValue 10
        -fieldMinValue -1 -fieldMaxValue 10
        -value 1`;

    global string $outputCountSlide;
    $outputCountSlide = `intSliderGrp -label "Output Count" -field true
        -minValue 1 -maxValue 100
        -fieldMinValue -1 -fieldMaxValue 100
        -value 10`;

    global string $minEdgeLengthSlide;
    $minEdgeLengthSlide = `floatSliderGrp -label "Min Edge Length" -field true
        -minValue 0.1 -maxValue 10.0
        -fieldMinValue 0.0 -fieldMaxValue 10.0
        -value 1.0`;

    global string $maxEdgeLengthSlide;
    $maxEdgeLengthSlide = `floatSliderGrp -label "Max Edge Length" -field true
        -minValue 1.0 -maxValue 50.0
        -fieldMinValue 0.0 -fieldMaxValue 50.0
        -value 10.0`;

    columnLayout -adjustableColumn true;
    button -label "Cancel" -command "onCancelPressed()";
    button -label "Generate" -command "onCreatePressed()";

    setParent ..;

    showWindow myWindow;
}

//call registered command to call C++ code for MFnMesh reading
global proc loadObject() {
    print("Load Object button pressed\n");
}

global string $gMainWindow;

if (`menu -exists myCustomMenu`) {
    deleteUI myCustomMenu;
}

menu -parent $gMainWindow -label "Grammarizer" myCustomMenu;

menuItem -label "Open Grammarizer Window" -command "showMyWindow();";

showMyWindow();
